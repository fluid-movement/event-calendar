name: Deploy to Hostinger

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies and build assets
        run: |
          npm ci
          npm run build

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          tools: composer

      - name: Install PHP dependencies
        run: |
          composer install --no-dev --optimize-autoloader --no-interaction

      - name: Set up environment file
        run: |
          cat <<EOF > .env
          APP_NAME=${{ vars.APP_NAME }}
          APP_ENV=${{ vars.APP_ENV }}
          APP_KEY=${{ secrets.APP_KEY }}
          APP_DEBUG=${{ vars.APP_DEBUG }}
          APP_URL=${{ vars.APP_URL }}

          LOG_CHANNEL=${{ vars.LOG_CHANNEL }}
          LOG_LEVEL=${{ vars.LOG_LEVEL }}

          DB_CONNECTION=${{ vars.DB_CONNECTION }}
          DB_HOST=${{ secrets.DB_HOST }}
          DB_PORT=${{ secrets.DB_PORT }}
          DB_DATABASE=${{ secrets.DB_DATABASE }}
          DB_USERNAME=${{ secrets.DB_USERNAME }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}

          BROADCAST_DRIVER=${{ vars.BROADCAST_DRIVER }}
          CACHE_DRIVER=${{ vars.CACHE_DRIVER }}
          QUEUE_CONNECTION=${{ vars.QUEUE_CONNECTION }}
          SESSION_DRIVER=${{ vars.SESSION_DRIVER }}
          SESSION_LIFETIME=${{ vars.SESSION_LIFETIME }}

          MAIL_MAILER=${{ vars.MAIL_MAILER }}
          #MAIL_HOST=${{ secrets.MAIL_HOST }}
          #MAIL_PORT=${{ secrets.MAIL_PORT }}
          #MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}
          #MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}
          #MAIL_ENCRYPTION=${{ secrets.MAIL_ENCRYPTION }}
          #MAIL_FROM_ADDRESS=${{ vars.MAIL_FROM_ADDRESS }}
          #MAIL_FROM_NAME="${{ vars.MAIL_FROM_NAME }}"
          EOF
          chmod 600 .env

      - name: Deploy via rsync
        uses: burnett01/rsync-deployments@7.0.2
        with:
          switches: -avz --exclude=".git" --exclude="storage/logs"
          path: .
          remote_path: ${{ secrets.DEPLOY_PATH }}
          remote_host: ${{ secrets.HOSTINGER_HOST }}
          remote_port: ${{ secrets.HOSTINGER_PORT }}
          remote_user: ${{ secrets.HOSTINGER_USER }}
          remote_key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Run Laravel setup on server
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.HOSTINGER_HOST }}
          port: ${{ secrets.HOSTINGER_PORT }}
          username: ${{ secrets.HOSTINGER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ secrets.DEPLOY_PATH }}
            php artisan migrate --force
            php artisan cache:clear
            php artisan config:clear
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            php artisan storage:link
            chmod -R 775 storage bootstrap/cache
