name: Deploy to Hostinger

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies and build assets
        run: |
          npm install
          npm run build

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          tools: composer

      - name: Install PHP dependencies
        run: |
          composer install --no-dev --optimize-autoloader --no-interaction

      - name: Set up environment file
        run: |
          cat <<EOF > .env
          APP_NAME=${{ env.APP_NAME }}
          APP_ENV=${{ env.APP_ENV }}
          APP_KEY=${{ secrets.APP_KEY }}
          APP_DEBUG=${{ env.APP_DEBUG }}
          APP_URL=${{ env.APP_URL }}

          LOG_CHANNEL=${{ env.LOG_CHANNEL }}
          LOG_LEVEL=${{ env.LOG_LEVEL }}

          DB_CONNECTION=${{ env.DB_CONNECTION }}
          #DB_HOST=${{ secrets.DB_HOST }}
          #DB_PORT=${{ secrets.DB_PORT }}
          #DB_DATABASE=${{ secrets.DB_DATABASE }}
          #DB_USERNAME=${{ secrets.DB_USERNAME }}
          #DB_PASSWORD=${{ secrets.DB_PASSWORD }}

          BROADCAST_DRIVER=${{ env.BROADCAST_DRIVER }}
          CACHE_DRIVER=${{ env.CACHE_DRIVER }}
          QUEUE_CONNECTION=${{ env.QUEUE_CONNECTION }}
          SESSION_DRIVER=${{ env.SESSION_DRIVER }}
          SESSION_LIFETIME=${{ env.SESSION_LIFETIME }}

          MAIL_MAILER=${{ env.MAIL_MAILER }}
          #MAIL_HOST=${{ secrets.MAIL_HOST }}
          #MAIL_PORT=${{ secrets.MAIL_PORT }}
          #MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}
          #MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}
          #MAIL_ENCRYPTION=${{ secrets.MAIL_ENCRYPTION }}
          #MAIL_FROM_ADDRESS=${{ env.MAIL_FROM_ADDRESS }}
          #MAIL_FROM_NAME="${{ env.MAIL_FROM_NAME }}"
          EOF

      - name: Deploy via rsync
        uses: burnett01/rsync-deployments@7.0.2
        with:
          switches: -avz --exclude=".git" --exclude="storage/logs"
          path: .
          remote_path: ${{ env.DEPLOY_PATH }}
          remote_host: ${{ secrets.HOSTINGER_HOST }}
          remote_port: ${{ secrets.HOSTINGER_PORT }}
          remote_user: ${{ secrets.HOSTINGER_USER }}
          remote_key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Run Laravel setup on server
        env:
          HOST: ${{ secrets.HOSTINGER_HOST }}
          PORT: ${{ secrets.HOSTINGER_PORT }}
          USER: ${{ secrets.HOSTINGER_USER }}
          DEPLOY_PATH: ${{ env.DEPLOY_PATH }}
        run: |
          ssh -p $PORT -i private_key -o StrictHostKeyChecking=no $USER@$HOST << 'EOF'
            cd $DEPLOY_PATH
            chmod 600 .env
            php artisan migrate --force
            php artisan cache:clear
            php artisan config:clear
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            php artisan storage:link
            chmod -R 775 storage bootstrap/cache
          EOF
